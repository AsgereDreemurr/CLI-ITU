import { Command } from "@oclif/command";
import chalk = require("chalk");

export class LolCommand extends Command {
  static description = "";

  async run(): Promise<void> {
    console.log(
      chalk.green(`
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(*,,..,,**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@***********/****//*,,*/@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@(*,*/(#(((/*////*/**////(((#/*,,/@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@(**,/(###%%%#(#(((#((((#(((((##%###(*,*//@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@%**,*(###%%%#######%%%%%%%%%#%##########((*,//@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@(***(###%%#########%%%%%%%%#######%#########(**/(@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@#(**/####%#########%%%%%%%%%%%%%%%%##%%#########/*/(@@@@@@@@@@@@@
    @@@@@@@@@@@@@@((*//(############%%%%%%%%%%%%%%%%%%%##%#########((/*/@@@@@@@@@@@@
    @@@@@@@@@@@@@(//**/###########%#%%%%%%%%%%%%%%%%%%%%%%##########(/*//&@@@@@@@@@@
    @@@@@@@@@@@@#***//((########%##%%%%%%%%%%%%%%%%%%%%%%%##%#######((//*/@@@@@@@@@@
    @@@@@@@@@@@&(***/*/((#########%#%%%%%%%%%%%%%%%%%%%%%%%##%######(((***/@@@@@@@@@
    @@@@@@@@@@@(*/(///(((###%%####%#%%%%%%%%%%%%%%%%%%%%%%########(##(//*///@@@@@@@@
    @@@@@@@@@@******//(((########%%%%%%%%%%%%%%%%%%%%%%%%#%##########(/****/@@@@@@@@
    @@@@@@@@@@/***,/((##########%#%%%%%%%%%%%%%%%%%%%%%%%############(((**,**@@@@@@@
    @@@@@@@@@@@,,,*(((###(#####%###%#%%##%%%%%%%%%%%%%%%%##########(((((/,,(((%@@@@@
    @@@@@@@*/((/,*,/((((###(##(##%%%%%%%%%###%%%%#%%%%%%%%####((((#(((((/,*/(//@@@@@
    @@@@@@&(///(****,,(((,,*,,.......,*/,*/((###(((((*,/*,..........,,*/**,///(@@@@@
    @@@@@@@(((((**/((/,./////(((#(((////****.......***/////((((///////..(/*(((#@@@@@
    @@@@@@@@###(/*/((((.(//*,,///.,,////(#((.,(#/,./(/*/(,,,,//***//((.((/*(((@@@@@@
    @@@@@@@@@(#(#/*((##/.((((((#####((((##(/.####(.(((((###%##((/(((((.((/*((@@@@@@@
    @@@@@@@@@@#((/*/(###.(#####%%%%%%%#%##/.(####(/.(##%%%%%%#####(((.(((//(@@@@@@@@
    @@@@@@@@@@&((**/((##(./#####%%%%%%%#(.(((#####((,.##%%%%%%%%###/.((((,/(@@@@@@@@
    @@@@@@@@@@@#(*//(((##(((/*******/(((/#(((#####((((####((///((((((#((/*((@@@@@@@@
    @@@@@@@@@@@((***//(/(((#%%%%%%%#####(#(((##%##(((#(/#(##%%%####(((((/*/%@@@@@@@@
    @@@@@@@@@@@@@&*//////(##(###########(*,,,.///*,,,,*((##((#####((/(///(@@@@@@@@@@
    @@@@@@@@@@@@@@/**/*/////((#(///(/(((**/,***/*/,,**/(/(((((((##((///*/@@@@@@@@@@@
    @@@@@@@@@@@@@@/*/#//*///((/*,//***/(*///*/**/**/*//#//*(*(*(/(//(///*@@@@@@@@@@@
    @@@@@@@@@@@@@@@**/(#(*/*/(/((**,.**/**/*/////*///******,*((((/(//(/*/@@@@@@@@@@@
    @@@@@@@@@@@@@@@**//(**//((%/,/######((((####((##(((##(#(*(/#((*/*#(/@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@/,*/*////(**((#%###((#(###(((##/((((##((#(/#(/**///@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@/,*/***/**(##%%((########((###(/(#((#%%%#/*//////@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@***,,,**(#(((///((#%##(#########((((#%##**,***/@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@.(%/,,,.*,,*((*#/(#/#(###%%#%%###((((/**/*/,,,,*@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@../%%%#*,..,,,**/(###%((%##(%#%###(#%###(/*,,,,,@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@&..../%%%&%#**,,*,,,*/(##(%#(#%##%%(###%%#/(*,.,*%@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@.......,%&&&&&&%(*/**,**/(((/#((((((((/(*///**..**(@@@@@@@@@@@@@@@@@@@@
    @@@@@&...........*&&&&&&&@&%%////*,*///*/**/******,,,,,*///#%@@@@@@@@@@@@@@@@@@@
    `)
    );
  }
}
